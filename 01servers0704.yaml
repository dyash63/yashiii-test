- name: Group servers by ending digits
  hosts: all
  gather_facts: no
  tasks:
    - name: Group servers by ending
      add_host:
        name: "{{ item }}"
        groups: "ending_{{ item[-2:] }}"
      loop: "{{ play_hosts }}"

- name: Validate log status for servers ending with 01
  hosts: ending_01
  gather_facts: no
  serial: 15
  tasks:
    - name: Check for no new jobs
      shell: >
        timeout 30 bash -c '
        tail -F $(ls -1t /var/log/cloudstor_manager/manager* | head -1) |
        awk "/No new jobs found.../{printf \\".\\"};!/No new/{print \$0; exit 1}"
        '
      register: log_output
      failed_when: false
      changed_when: false

    - name: Show log output
      debug:
        msg: "Raw log output: {{ log_output.stdout }}"

    - name: Extract dots only from log output
      set_fact:
        extracted_dots: "{{ log_output.stdout | regex_replace('[^.]', '') }}"

    - name: Count dots
      set_fact:
        dot_count: "{{ extracted_dots | length }}"

    - name: Check if log contains only dots
      set_fact:
        contains_only_dots: "{{ log_output.stdout | regex_search('^[.]+$', multiline=True) is not none }}"

    - name: Display log validation status
      debug:
        msg: "Contains only dots: {{ contains_only_dots }}, Dot count: {{ dot_count }}"

    - name: Output message if server is valid
      debug:
        msg: "Server {{ inventory_hostname }} is ready — log valid with {{ dot_count }} dots."
      when: contains_only_dots and (dot_count | int >= 7)

    - name: Output message if server is NOT valid
      debug:
        msg: "Server {{ inventory_hostname }} skipped — log invalid or insufficient dots."
      when: not (contains_only_dots and (dot_count | int >= 7))
