---
- name: Patch RHEL Servers
  hosts: all
  gather_facts: no
  tasks:
    - name: Group servers by ending
      add_host:
        name: "{{ inventory_hostname }}"
        groups: "ending_{{ inventory_hostname[-2:] }}"
      loop: "{{ play_hosts }}"

- name: Check for no new jobs and patch servers ending with 01
  hosts: ending_01
  gather_facts: yes
  serial: 15
  tasks:
    - name: Check for no new jobs
      shell: >
        tail -f `ls -1t /var/log/cloudstor_manager/manager*|head -1` 
        | awk '/No new jobs found.../{printf "."};!/No new/{print $0; exit 1}' 
        | timeout 30 tr -d '\n'  # Remove newlines for counting dots
      register: job_check
      failed_when: false
      changed_when: false


    - name: Count dots in output
      set_fact:
        dot_count: "{{ job_check.stdout | length }}"

    - name: Decide action based on dot count
      block:
        - name: Apply security updates
          shell: yum update --security -y
          register: YUM_OUT
          async: 3600
          poll: 60
          become: true

        - debug: var=YUM_OUT.stdout_lines

	        - name: Install prereqs
	          yum:
	            name: yum-utils
	            state: installed
	          become: true

	        - name: Check if we need to restart
	          shell: /usr/bin/needs-restarting -r | grep -i reboot
	          check_mode: no
	          register: needs_restarting_out
	          failed_when: ( needs_restarting_out.rc not in [ 0, 1 ] )
	          changed_when: False
	          become: true

        - debug: var=needs_restarting_out.stdout_lines

        - name: Send notification to slack
          community.general.slack:
            token: ""
            msg: "```{{ ansible_nodename }}\n\tSecurity updates applied.\n\t{{ needs_restarting_out.stdout }}```"
          delegate_to: localhost
      when: dot_count >= 7

    - name: Output jobs are running
      debug:
        msg: "Server {{ inventory_hostname }} has jobs running, skipping patch."
      when: dot_count < 7

- name: Check for no new jobs and patch servers ending with 02
  hosts: ending_02
  gather_facts: yes
  serial: 15
  tasks:
    - name: Check for no new jobs
      shell: >
        tail -f `ls -1t /var/log/cloudstor_manager/manager*|head -1` 
        | awk '/No new jobs found.../{printf "."};!/No new/{print $0; exit 1}' 
        | timeout 30 tr -d '\n'  
      register: job_check
      failed_when: false
      changed_when: false

    - name: Count dots in output
      set_fact:
        dot_count: "{{ job_check.stdout | length }}"

    - name: Decide action based on dot count
      block:
        - name: Apply security updates
          shell: yum update --security -y
          register: YUM_OUT
          async: 3600
          poll: 60
          become: true

        - debug: var=YUM_OUT.stdout_lines

        - name: Install prereqs
          yum:
            name: yum-utils
            state: installed
          become: true

        - name: Check if we need to restart
          shell: /usr/bin/needs-restarting -r | grep -i reboot
          check_mode: no
          register: needs_restarting_out
          failed_when: ( needs_restarting_out.rc not in [ 0, 1 ] )
          changed_when: False
          become: true

        - debug: var=needs_restarting_out.stdout_lines

        - name: Send notification to slack
          community.general.slack:
            token: "TFaEt1ok4OD3C"
            msg: "```{{ ansible_nodename }}\n\tSecurity updates applied.\n\t{{ needs_restarting_out.stdout }}```"
          delegate_to: localhost
      when: dot_count >= 7

    - name: Output jobs are running
      debug:
        msg: "Server {{ inventory_hostname }} has jobs running, skipping patch."
      when: dot_count < 7

- name: Check for no new jobs and patch servers ending with 03
  hosts: ending_03
  gather_facts: yes
  serial: 15
  tasks:
    - name: Check for no new jobs
      shell: >
        tail -f `ls -1t /var/log/cloudstor_manager/manager*|head -1` 
        | awk '/No new jobs found.../{printf "."};!/No new/{print $0; exit 1}' 
        | timeout 30 tr -d '\n'  
      register: job_check
      failed_when: false
      changed_when: false

    - name: Count dots in output
      set_fact:
        dot_count: "{{ job_check.stdout | length }}"

    - name: Decide action based on dot count
      block:
        - name: Apply security updates
          shell: yum update --security -y
          register: YUM_OUT
          async: 3600
          poll: 60
          become: true

        - debug: var=YUM_OUT.stdout_lines

        - name: Install prereqs
          yum:
            name: yum-utils
            state: installed
          become: true

        - name: Check if we need to restart
          shell: /usr/bin/needs-restarting -r | grep -i reboot
          check_mode: no
          register: needs_restarting_out
          failed_when: ( needs_restarting_out.rc not in [ 0, 1 ] )
          changed_when: False
          become: true

        - debug: var=needs_restarting_out.stdout_lines

        - name: Send notification to slack
          community.general.slack:
            token: "TFaEt1ok4OD3C"
            msg: "```{{ ansible_nodename }}\n\tSecurity updates applied.\n\t{{ needs_restarting_out.stdout }}```"
          delegate_to: localhost
      when: dot_count >= 7

    - name: Output jobs are running
      debug:
        msg: "Server {{ inventory_hostname }} has jobs running, skipping patch."
      when: dot_count < 7
