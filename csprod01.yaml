- name: Patch RHEL Servers (Ending with 01)
  hosts: all
  gather_facts: no
  tasks:
    - name: Group servers by ending
      add_host:
        name: "{{ item }}"
        groups: "ending_{{ item[-2:] }}"
      loop: "{{ play_hosts }}"

- name: Patch RHEL Servers (Ending with 01)
  hosts: ending_01
  gather_facts: no
  serial: 15
  tasks:
    - name: Check for no new jobs
      shell: >
        tail -f `ls -1t /var/log/cloudstor_manager/manager*|head -1` 
        | awk '/No new jobs found.../{printf "."};!/No new/{print $0; exit 1}' 
        | timeout 30 tr -d '\n'  # Remove newlines for counting dots
      register: log_output
      failed_when: false
      changed_when: false
    
    - name: showlog
      debug:
        msg: "output: {{ log_output }}"

    - name: Extract dots only from log output
      set_fact:
        extracted_dots: "{{ log_output.stdout | regex_replace('[^.]', '') }}"

    - name: Count dots
      set_fact:
        dot_count: "{{ extracted_dots | length }}"

    - name: Check if log contains only dots
      set_fact:
        contains_only_dots: "{{ log_output.stdout | regex_search('^[.]+$', multiline=True) is not none }}"

    - name: Display log validation status
      debug:
        msg: "Contains only dots: {{ contains_only_dots }}"

    - name: Pause for 30 minutes before patching
      pause:
        minutes: 1

    - name: Apply security updates if log contains only dots and has at least 7 dots
      when: contains_only_dots and (dot_count | int >= 7)
      block:
        - name: Apply security updates
          yum:
            name: '*'
            state: latest
          become: true

        - name: Install prerequisite packages
          yum:
            name: yum-utils
            state: installed
          become: true

        - name: Check if we need to restart
          shell: /usr/bin/needs-restarting -r | grep -i reboot
          check_mode: no
          register: needs_restarting_out
          failed_when: ( needs_restarting_out.rc not in [ 0, 1 ] )
          changed_when: False
          become: true

        - debug: var=needs_restarting_out.stdout_lines

        - name: Display update completion message
          debug:
            msg: "{{ inventory_hostname }} - Security updates applied. {{ needs_restarting_out.stdout }}"

       # - name: Send notification to Slack
       #   community.general.slack:
       #     token: "" 
       #     channel: "" 
       #     msg: "{{ inventory_hostname }} - Security updates applied. {{ needs_restarting_out.stdout }}"
       #   delegate_to: localhost

    - name: Output if patching is skipped
      debug:
        msg: "Server {{ inventory_hostname }} skipped patching due to invalid log output or insufficient dots."
      when: not contains_only_dots or (dot_count | int < 7)
