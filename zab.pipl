pipeline {
    agent any

    environment {
        ANSIBLE_INVENTORY = 'inventory.yaml'
        ANSIBLE_USER = 'root'
        ANSIBLE_PASSWORD = 'welcome@123'
        PATH = "/opt/homebrew/bin:${env.PATH}"
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/dyash63/yashiii-test.git'
            }
        }

        stage('Install Ansible Dependencies') {
            steps {
                sh '''
                    if ! command -v ansible &> /dev/null; then
                        echo "Installing Ansible..."
                        brew install ansible
                    fi
                    if ! command -v yq &> /dev/null; then
                        echo "Installing yq..."
                        brew install yq
                    fi
                    ansible --version
                    ansible-galaxy collection install community.general
                '''
            }
        }

        stage('Reboot HAP Hosts One by One') {
            steps {
                script {
                    // Get list of HAP hostnames using yq
                    def rawHosts = sh(script: "yq eval '.all.children.HAP.hosts | keys | .[]' ${env.ANSIBLE_INVENTORY}", returnStdout: true).trim()
                    def hosts = rawHosts.tokenize('\n')

                    for (host in hosts) {
                        def proceed = input(
                            id: "reboot-${host}",
                            message: "Do you want to reboot host: ${host}?",
                            ok: "Reboot ${host}",
                            parameters: [
                                choice(name: 'IMS_SRR', choices: ['yes', 'no'], description: "Is IMS SRR disabled for ${host}?")
                            ]
                        )

                        def imsSrrDisabled = proceed == 'yes' ? 'true' : 'false'

                        echo "Rebooting host: ${host} (ims_srr_disabled=${imsSrrDisabled})"

                        def exitCode = sh(
                            script: "ansible-playbook -i ${env.ANSIBLE_INVENTORY} zabhapreboot.yaml --limit ${host} --extra-vars \"ansible_user=${env.ANSIBLE_USER} ansible_password=${env.ANSIBLE_PASSWORD} ims_srr_disabled=${imsSrrDisabled}\"",
                            returnStatus: true
                        )

                        if (exitCode != 0) {
                            error "Reboot of ${host} failed! Check logs."
                        }
                    }
                }
            }
        }
    }

    post {
        success {
            echo "All reboots completed successfully."
        }
        failure {
            echo "One or more reboots failed. Check logs."
        }
        always {
            archiveArtifacts artifacts: '*.log', allowEmptyArchive: true
        }
    }
}
