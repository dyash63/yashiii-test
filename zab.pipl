pipeline {
    agent any

    environment {
        ANSIBLE_INVENTORY = 'inventory.yaml'
        ANSIBLE_USER = 'root'
        ANSIBLE_PASSWORD = 'welcome@123'
        PATH = "/opt/homebrew/bin:${env.PATH}"
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/dyash63/yashiii-test.git'
            }
        }

        stage('Install Ansible Dependencies') {
            steps {
                sh '''
                    if ! command -v ansible &> /dev/null; then
                        echo "Ansible is not installed. Installing..."
                        brew install ansible
                    fi
                    ansible --version
                    ansible-galaxy collection install community.general
                '''
            }
        }

        stage('Reboot HAP Hosts One by One') {
            steps {
                script {
                    // Read the inventory
                    def inventory = readYaml file: "${ANSIBLE_INVENTORY}"
                    def hostMap = inventory['all']['children']['HAP']['hosts']
                    def hostList = hostMap.keySet() as List

                    for (host in hostList) {
                        def userChoice = input(
                            id: "reboot_${host}",
                            message: "Do you want to reboot ${host} (${hostMap[host].ansible_host})?",
                            parameters: [choice(name: 'Proceed', choices: ['yes', 'no'], description: "Reboot ${host}?")]
                        )

                        if (userChoice == 'yes') {
                            echo "Rebooting ${host}..."
                            def exitCode = sh(
                                script: """
                                    ansible-playbook -i ${ANSIBLE_INVENTORY} zabhapreboot.yaml \
                                    --extra-vars "ansible_user=${ANSIBLE_USER} ansible_password=${ANSIBLE_PASSWORD} target_host=${host}"
                                """,
                                returnStatus: true
                            )
                            if (exitCode != 0) {
                                error "Reboot of ${host} failed! Check logs."
                            }
                        } else {
                            echo "Skipping ${host}"
                        }
                    }
                }
            }
        }
    }

    post {
        success {
            echo "All selected reboots completed successfully."
        }
        failure {
            echo "One or more reboots failed. Check logs."
        }
        always {
            archiveArtifacts artifacts: '*.log', allowEmptyArchive: true
        }
    }
}
